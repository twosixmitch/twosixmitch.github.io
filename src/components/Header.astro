---
import { SITE } from '../config.js';
// Icon component removed - using inline SVG
---

<header class="sticky top-0 z-50 w-full border-b border-secondary-200 bg-white/80 backdrop-blur-md dark:border-secondary-800 dark:bg-secondary-900/80">
  <div class="mx-auto flex max-w-7xl items-center justify-between px-4 py-4 sm:px-6 lg:px-8">
    <!-- Site Title - Fixed position, no shifting -->
    <div class="flex items-center flex-shrink-0 w-48">
      <a href="/" class="text-2xl font-bold text-primary-600 dark:text-primary-400">
        {SITE.name}
      </a>
    </div>

    <!-- Desktop Navigation - Right aligned -->
    <nav class="hidden md:flex items-center space-x-8 flex-shrink-0">
      <a href="/" class="text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 transition-colors">
        Home
      </a>
      <a href="/kana-challenges" class="text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 transition-colors">
        Kana Challenges
      </a>
      <a href="/blog" class="text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 transition-colors">
        Blog
      </a>
    </nav>

    <!-- Mobile Menu Button - Fixed position, no shifting -->
    <button
      id="mobile-menu-button"
      class="md:hidden p-2 text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 flex-shrink-0 w-16"
      aria-label="Toggle mobile menu"
    >
      <!-- Hamburger Icon -->
      <svg id="hamburger-icon" class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
      <!-- Close Icon (hidden by default) -->
      <svg id="close-icon" class="h-6 w-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>

  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="hidden md:hidden border-t border-secondary-200 dark:border-secondary-800 bg-white dark:bg-secondary-900">
    <div class="px-4 py-4 space-y-4">
      <a href="/" class="block text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 transition-colors">
        Home
      </a>
             <a href="/kana-challenges" class="block text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 transition-colors">
         Kana Challenges
       </a>
      <a href="/blog" class="block text-secondary-700 hover:text-primary-600 dark:text-secondary-300 dark:hover:text-primary-400 transition-colors">
        Blog
      </a>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle - stable implementation
  function initializeMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const hamburgerIcon = document.getElementById('hamburger-icon');
    const closeIcon = document.getElementById('close-icon');

    if (mobileMenuButton && mobileMenu && hamburgerIcon && closeIcon) {
      // Only add event listener if it doesn't already exist
      if (!mobileMenuButton.hasAttribute('data-initialized')) {
        mobileMenuButton.setAttribute('data-initialized', 'true');
        
        mobileMenuButton.addEventListener('click', () => {
          const isHidden = mobileMenu.classList.contains('hidden');
          if (isHidden) {
            // Show menu
            mobileMenu.classList.remove('hidden');
            mobileMenuButton.setAttribute('aria-expanded', 'true');
            // Switch to close icon
            hamburgerIcon.classList.add('hidden');
            closeIcon.classList.remove('hidden');
          } else {
            // Hide menu
            mobileMenu.classList.add('hidden');
            mobileMenuButton.setAttribute('aria-expanded', 'false');
            // Switch back to hamburger icon
            hamburgerIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
          }
        });
      }
    }
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initializeMobileMenu);
  
  // Also initialize when Astro navigates (for SPA-like behavior)
  document.addEventListener('astro:page-load', initializeMobileMenu);
  
  // Fallback initialization
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMobileMenu);
  } else {
    initializeMobileMenu();
  }
</script>
